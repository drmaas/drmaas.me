---
import { MarkdownInstance } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import TagButton from "../../components/TagButton.astro";
import TableOfContents from "../../components/TableOfContents.astro";

import { Frontmatter, fileToSlug, sortDateDescending } from "../../misc";
import path from "path";
import readingTime from "reading-time";
import DateComponent from "@components/DateComponent.astro";
import ReadingTimeComponent from "@components/ReadingTimeComponent.astro";

export interface Props {
  post: MarkdownInstance<Frontmatter>;
  prevPost: MarkdownInstance<Frontmatter>;
  nextPost: MarkdownInstance<Frontmatter>;
}

export async function getStaticPaths() {
  const allPosts = (await Astro.glob(
    `../../posts/*.md`,
  )) as MarkdownInstance<Frontmatter>[];
  const numberOfPosts = allPosts.length; // Total of all posts

  return sortDateDescending(allPosts).map(
    (post: MarkdownInstance<Frontmatter>, i: number) => ({
      // Map() all posts after sorting
      params: {
        slug: fileToSlug(post.file, "md"),
      },
      props: {
        post,
        // Previous post
        prevPost:
          i + 1 === numberOfPosts // If the current post is the oldest
            ? { frontmatter: "" }
            : allPosts[i + 1],
        // Next post
        nextPost:
          i === 0 // If the current post is the newest
            ? { frontmatter: "" }
            : allPosts[i - 1],
      },
    }),
  );
}

// Get properties (frontmatter) for the previous/next posts
const { post, prevPost, nextPost } = Astro.props as Props;
const { title, image, imageDescription, tags, description } = post.frontmatter;
const date = new Date(post.frontmatter.date).toDateString();
const headings = post.getHeadings();
const { Content } = post;
const prevUrl = prevPost.frontmatter
  ? `/articles/${fileToSlug(prevPost.file, "md")}`
  : "";
const nextUrl = nextPost.frontmatter
  ? `/articles/${fileToSlug(nextPost.file, "md")}`
  : "";
---

<BaseLayout title={title} description={description}>
  <div class="mx-auto">
    <div class="max-w-5xl md:pb-10 md:pt-16 md:px-8 mx-auto pb-8 pt-12 px-5">
      <h1
        class="text-3xl md:text-5xl 2xl:text-6xl mb-[0.8em] font-extrabold mx-auto w-fit"
      >
        {title}
      </h1>
      {
        image ? (
          <Fragment>
            <img
              class="w-10/12 mx-auto aspect-video"
              src={image}
              alt={imageDescription ?? title}
              transition:name={image}
            />
          </Fragment>
        ) : null
      }

      <div>
        <div class="flex flex-wrap gap-2">
          {
            tags &&
              tags.length > 0 &&
              tags.map((tag) => <TagButton tagName={tag} />)
          }
        </div>
        <div class="flex flex-wrap gap-2 mt-8">
          <DateComponent date={date} />
          <span> â€¢ </span>
          <ReadingTimeComponent content={post.rawContent()} />
        </div>
      </div>
    </div>
    <div
      class="flex max-w-5xl mx-auto md:px-8 px-5 gap-12 items-start prose md:prose-lg 2xl:prose-xl px-4 mx-auto prose-pre:font-mono"
    >
      <TableOfContents headings={headings} />
      <div>
        <article class="grid justify-items-start max-w-2xl">
          <Content />
        </article>
      </div>
    </div>
    <!-- https://route360.dev/en/post/astro-prevnext-posts/ -->
    <div
      class="flex max-w-5xl mx-auto md:px-8 px-5 gap-12 items-start prose md:prose-lg 2xl:prose-xl px-4 mx-auto prose-pre:font-mono"
    >
      {
        prevPost.frontmatter && (
          <a
            class="no-underline text-cyan-600 hover:text-black dark:hover:text-white"
            href={prevUrl}
          >
            {`<< ${prevPost.frontmatter.title}`}
          </a>
        )
      }
      {
        nextPost.frontmatter && (
          <a
            class="no-underline text-cyan-600 hover:text-black dark:hover:text-white"
            href={nextUrl}
          >
            {`${nextPost.frontmatter.title} >>`}
          </a>
        )
      }
    </div>
  </div>
</BaseLayout>
